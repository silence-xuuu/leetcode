//给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。
//输入: [1,2,3,4,5,6,7] 和 k = 3
//输出: [5,6,7,1,2,3,4]

void rotate(int* nums, int numsSize, int k){
    if(k>=numsSize) k=k%numsSize;
    if(numsSize==1||k==0) return nums;
    int temp[numsSize];
    for(int i=0;i<k;i++){
        temp[i]=nums[numsSize-k+i];
    }
    for(int i=numsSize-k-1;i>=0;i--){
        nums[i+k]=nums[i];
    }
    for(int i=0;i<k;i++){
        nums[i]=temp[i];
    }
    return nums;
}

//16ms 97.61%
//9mb 5.24%

//思路：
//首先判断旋转个数如果大于数组长度则取余，将无输入、无改变的特殊情况剔除。
//将待移动数组的提前位另外存储，将前位移动到指定位置，将待定区数组存入原数组。
