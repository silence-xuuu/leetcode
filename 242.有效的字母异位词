bool isAnagram(char *s, char *t)
{
    int i,x[26]={0};
    while (*s) x[*s++ - 'a']++;
    while (*t) x[*t++ - 'a']--;
    for (i=0;i<26;i++)                        
        if (x[i])    return false;
    return true;                                        
}

用时：4Ms 超越：92.30%
内存：7.2MB 超越：5.58%

思路：
用一个数组记录每个字母出现的次数，最后遍历判断是否数组的每个元素都为0。
优点：
用一个数组进行存储，不需要计算两个字符串的长度大小关系，而且减少了一个存储数组，代码更为简洁。

4.思考感悟：
1.字母的排序判断题可以转化为字母的编码计算，同时可以运用数组记录字母出现的次数。
2.第二种方法与第一种用时虽然相差不大，但是由于代码更为简洁，有更好的可读性。
3.通常在字符串的比较涉及到关于字母的顺序、相同性、不同字母等题目时，使用一个利用ASCII码记录字母出现次数的数组可以简单而有效的解决问题。
