/*
给定一个整数类型的数组 nums，请编写一个能够返回数组“中心索引”的方法。
我们是这样定义数组中心索引的：数组中心索引的左侧所有元素相加的和等于右侧所有元素相加的和。
如果数组不存在中心索引，那么我们应该返回 -1。如果数组有多个中心索引，那么我们应该返回最靠近左边的那一个。
*/

int pivotIndex(int* nums, int numsSize){
    int i,count=0,count1=0;
    for(i=0;i<numsSize;i++){
        count+=nums[i];
    }
    for(i=0;i<numsSize;i++){
        if((count1*2+nums[i])==count) return i;
        count1+=nums[i];
    }
    return -1;
}

/*
24ms 89.75%

思路：一次遍历求和，二次遍历判断。

思考感悟：
1、此题不能使用双指针法，因为不能将所有元素囊括在内，所以采用更加费时的两次遍历。
2、但由于题干要求找到最为靠左的，所以时间上相差并不是特别大。
3、主要难点在于判断时count1值的变更（但其实好像也不难...）
*/
