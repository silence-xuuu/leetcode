/*
给定一个 n × n 的二维矩阵表示一个图像。
将图像顺时针旋转 90 度。
说明：
你必须在原地旋转图像，这意味着你需要直接修改输入的二维矩阵。请不要使用另一个矩阵来旋转图像。

示例 1:
给定 matrix = 
[
  [1,2,3],
  [4,5,6],
  [7,8,9]
],
原地旋转输入矩阵，使其变为:
[
  [7,4,1],
  [8,5,2],
  [9,6,3]
]
*/

class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        int num=matrix.size();
        for(int i=0;i<num;i++){
            for(int j=i;j<num;j++){
                swap(matrix[i][j],matrix[j][i]);    //对角线翻转
            }
        }
        for(int i=0;i<num;i++){
            reverse(matrix[i].begin(),matrix[i].end());     //按列翻转
        }
    }
};

/*
0ms 100%

思路：两次翻转

思考感悟：
1、此题可以从通式和翻转两种方法入手，翻转的代码较为简洁但比较难想到。
2、有关矩阵变化的题目大多可以考虑通式、额外n维数组等解决方法。
3、在对元素进行翻转时，要记得遍历的范围和顺序。
*/
