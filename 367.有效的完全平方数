/*
给定一个正整数 num，编写一个函数，如果 num 是一个完全平方数，则返回 True，否则返回 False。
说明：不要使用任何内置的库函数，如  sqrt。

输入：16
输出：True
*/

bool isPerfectSquare(int num){
    if(num==0||num==1) return true;
    long sum=0;
    for(int i=1;i<num;i+=2){
        sum+=i;
        if(sum==num) return true;
        if(sum>num) return false;
    }
    return false;
}

/*
0Ms 100%
6.7MB 5.71%

思路：
经过分析可得，完全平方数一定是连续个奇数的和，于是每次加上一个新的奇数后判断是否等于所给数，遍历完成后返回false。

思考感悟：
1.一般的数组搜索给定值的减少时间方法：二分法、栈等。
2.遇到有特殊性质的数组搜索，可以通过分析得到符合要求数字的同一性质，此时往往比二分法等方法更加节省时间（因为运用了特殊性质多想了一步）。
*/
