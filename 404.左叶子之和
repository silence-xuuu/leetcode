/*
计算给定二叉树的所有左叶子之和。

示例：

    3
   / \
  9  20
    /  \
   15   7

在这个二叉树中，有两个左叶子，分别是 9 和 15，所以返回 24
*/

class Solution {
public:
    int sumOfLeftLeaves(TreeNode* root) {
        if(root==NULL) return 0;
        if(root->left!=NULL && root->left->right==NULL && root->left->left == NULL) 
        return root->left->val+sumOfLeftLeaves(root->right);
        return sumOfLeftLeaves(root->left)+sumOfLeftLeaves(root->right);
    }
};

/*
0ms 100%

思路：递归。

思考感悟：
1、按照第100题的步骤填写递归函数。
2、此题较难的是对叶子的判断处理，增加值的步骤中使用到了上一步的迭代值，减少代码复杂度。
*/
