/*
给你两个 没有重复元素 的数组 nums1 和 nums2 ，其中nums1 是 nums2 的子集。
请你找出 nums1 中每个元素在 nums2 中的下一个比其大的值。
nums1 中数字 x 的下一个更大元素是指 x 在 nums2 中对应位置的右边的第一个比 x 大的元素。如果不存在，对应位置输出 -1 。

示例 1:
输入: nums1 = [4,1,2], nums2 = [1,3,4,2].
输出: [-1,3,-1]
解释:
    对于 num1 中的数字 4 ，你无法在第二个数组中找到下一个更大的数字，因此输出 -1 。
    对于 num1 中的数字 1 ，第二个数组中数字1右边的下一个较大数字是 3 。
    对于 num1 中的数字 2 ，第二个数组中没有下一个更大的数字，因此输出 -1 。
*/

class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
    int i=0,j,m=0;
    vector<int> result(nums1.size());
    for(i=0;i<nums1.size();i++){
        result[i]=-1;                           //初始返回数组全为-1
    }
    for(i=0;i<nums1.size();i++){
        for(j=0;j<nums2.size();j++){            //双层循环遍历
            if(nums1[i]==nums2[j]){
                for(;j<nums2.size();j++){
                    if(nums2[j]>nums1[i]){       //第二个数组从下标i开始寻找
                        result[i]=nums2[j];
                        break;
                    }
                }
            }
            else continue;
        }
    }
    return result;
    }
};

/*
44ms 8%

思路：暴力循环
*/
