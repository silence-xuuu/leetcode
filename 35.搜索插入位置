class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int mid=0;
        int head=0;
        int last=nums.size()-1;
        while(head<last)
        {
            mid=(last-head)/2+head;
            if(target>nums[mid])
            {
                head=mid+1;
            }
            else if(target<nums[mid])
            {
                last=mid-1;
            }
            else return mid;
        }
        if(target<=nums[head])//插入位置在开头的情况
            return head;
        return head+1;//插入位置在结尾的情况
    }
}

思路：
二分查找。

思考感悟：
1.二分和遍历分别在时间和空间复杂度上有不同优势，不同题目可有不同优势。
2.在通常的解题过程中，二分法在耗时上有着绝对的优势，通过每一次减少一半的遍历范围大幅度减少了时间的消耗。（在时间复杂度不达标时大多哦是使用二分法解决问题）
