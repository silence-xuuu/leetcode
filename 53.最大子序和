/*
给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。

示例:
输入: [-2,1,-3,4,-1,2,1,-5,4],
输出: 6
解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。
*/

int maxSubArray(int* nums, int numsSize){
    int sum = nums[0],temp=0,i;
    for(i=0;i<numsSize;i++){
        temp += nums[i];
        if(temp>sum) sum=temp;
        if(temp<=0) temp=0;
    }
    return sum;
}

/*
4ms 99.76%

思路：
一遍遍历记录前一个元素的和值，当当前值大于和值时取代，小于0时清零。

思考感悟：
1、此题的重点在于判断小于零时更新和值，为减少sum的计算引入了temp来记录清零。
2、同样通过使用迭代的方法减少了递归的重复计算。（测试值好像不太大递归并不会超时）
3、典型的思路较困难但代码简单型题，在更新状态时同样有许多不同的解决方式。
*/
