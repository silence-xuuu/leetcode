/*
编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 char[] 的形式给出。
不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。
你可以假设数组中的所有字符都是 ASCII 码表中的可打印字符。

输入：["h","e","l","l","o"]
输出：["o","l","l","e","h"]
*/

void reverseString(char* s, int sSize){
    int left=0,right=sSize-1;
    char temp;
    while(left<right){
        temp=s[left];
        s[left]=s[right];
        s[right]=temp;
        left++;
        right--;
    }
}

/*
60ms 98.54%
13.4% 80.41%

思路：创建int型下标变量，前后向中间逼近并交换数值。

思考感悟：
1、此题同样可以用遍历一半改变下标的方式解决，但尝试后发现时间效率差距不大，且原方法的代码更加简洁。
2、此题是特别基础的反转题，很容易就能想到使用翻转的方式解决问题。时间效率几乎相同的方法还有双指针交换法等，但本质上的算法并没有太大区别，时间上也没有明显的改善。
*/
