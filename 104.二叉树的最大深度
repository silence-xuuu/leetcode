/*
给定一个二叉树，找出其最大深度。
二叉树的深度为根节点到最远叶子节点的最长路径上的节点数。
说明: 叶子节点是指没有子节点的节点。

示例：
给定二叉树 [3,9,20,null,null,15,7]，

    3
   / \
  9  20
    /  \
   15   7
返回它的最大深度 3 。
*/

class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(root==nullptr) return 0;
        return max(maxDepth(root->left),maxDepth(root->right))+1;
    }
};

/*
16ms 38%

思路：递归。

思考感悟：
1、0ms的范例代码一模一样，果然还是看机器吗...
2、同样需要全部遍历，递归的复杂度不高。
3、简单的按照步骤就能写出来，要注意最后要加上1（刚开始root的深度）。
*/
