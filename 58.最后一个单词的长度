/*
给定一个仅包含大小写字母和空格 ' ' 的字符串 s，返回其最后一个单词的长度。
如果字符串从左向右滚动显示，那么最后一个单词就是最后出现的单词。
如果不存在最后一个单词，请返回 0 。
说明：一个单词是指仅由字母组成、不包含任何空格的 最大子字符串。
*/

int lengthOfLastWord(char * s){
    int len=strlen(s),i,count=0,count1=0;
    for(i=len-1;i>=0;i--){
        if(s[i]==32) count1++;
        if(s[i]!=32) break;
    }
    for(i=len-count1-1;i>=0;i--){
        if(s[i]!=32) count++;
        if(s[i]== 32) break;
    }
    return count;
}

/*
0ms 100%

思路：
一次遍历分为两块，一块记录最后一个单词后面的空格数，一块计算最后一个单词的位数。

思考感悟：
1、此题的难点在于最后一个单词后面空格的处理，这里采用的是一次遍历分块计算的方法。
2、采用分块法由于还是只有一次遍历可以大大节约时间，避免前面不必要的计算。
3、倒叙计数问题一定还是需要注意对下标和循环开始结束的节点的把握。
*/
