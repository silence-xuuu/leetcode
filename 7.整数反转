int reverse(int x){
    int result = 0;
    while(x) {
        if(result > 0x7fffffff / 10 || result < (signed int)0x80000000/10){
            return 0;
        }
        result *= 10;
        result += x%10;
        x /= 10;
    }
    return result;
}

原始思路：暴力迭代法
存入示例后迭代反序取余读取数字，每次迭代将原数据乘十加入新的数字。
溢出判定：通过比较大小判断是否在INT型数字内，若超出则返回0。

现在思路：暴力迭代法
优点：代码较为简洁清楚，将是否溢出的条件放在循环中相较原方法可以减少前一步的迭代时间，只使用一个变量储存返回值减少重复代值计算的时间。
