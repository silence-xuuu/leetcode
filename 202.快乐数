/*
编写一个算法来判断一个数是不是“快乐数”。

一个“快乐数”定义为：对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和，然后重复这个过程直到这个数变为 1，也可能是无限循环但始终变不到 1。
如果可以变为 1，那么这个数就是快乐数。
*/

int loop(int m){
    int k=0;
    while(m){
        k+=(m%10)*(m%10);
        m/=10;
    }
    return k;
}

bool isHappy(int n){
    while(n!=1){
        n=loop(n);
        if(n==4) return false;
    }
    return true;
}

/*
0ms 100%

思路：
定义函数求各位平方相加值，为1返回true，为4返回false。

思考感悟：
1、此题的重点在于寻找返回false的条件，可以有通过特定次数和找到特定规律两种方法。
2、特定次数的方法较为容易想到，但会在某些例子中浪费一定时间，也会有的情况判断失误。
3、改进算法时可以将子函数并入主函数中，使得函数更加精简，但分开写更加具有条理。
4、卡在这一题是因为之前忘记了计数之后除以十导致超时...第二个点在于找到规律。
*/
