/*
给定一个非空数组，返回此数组中第三大的数。如果不存在，则返回数组中最大的数。要求算法时间复杂度必须是O(n)。
*/

int thirdMax(int* nums, int numsSize){
    long max1=LONG_MIN,max2=LONG_MIN,max3=LONG_MIN,i;
    for(i=0;i<numsSize;i++){
        if(nums[i]>max1){
            max3=max2;
            max2=max1;
            max1=nums[i];
        }
        else if(nums[i]>max2 && nums[i]<max1){
            max3=max2;
            max2=nums[i];
        }
        else if(nums[i]>max3 && nums[i]<max2){
            max3=nums[i];
        }
    }
    if(max3!=LONG_MIN) return max3;
    else return max1;
}

/*
8ms 75.07%

思路：
迭代法与LONG_MIN的值比较。

思考感悟：
1、此题的主要难点在于当存在负数无法对前值进行迭代。首先想到的是先对前三个数进行排序，但是代码会太长作罢。最后改为直接对LONG_MIN值进行迭代。
2、更快的方法中使用了qsort，有投机取巧的嫌疑，不太推荐使用。
3、此题重点在于对LONG_MIN的使用，想到的点在于测试用例中的-2147483648容易联想得到。
*/
