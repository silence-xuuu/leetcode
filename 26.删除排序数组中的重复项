/*
给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。
不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。

给定数组 nums = [1,1,2], 
函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。 
你不需要考虑数组中超出新长度后面的元素。
*/

int removeDuplicates(int* nums, int numsSize) {
    int i = 0;
    for (int j = 0; j < nums.size(); ++j) {
        if (i == 0 || nums[i-1] != nums[j]) nums[i++] = nums[j];
    }
    return i;
}

/*
44 ms	9.5 MB

思路：
遍历所有元素，取不同的下标变量。当遍历的新元素与前一元素不相等时记入新的下标数组。

思考感悟：
1.在数组的元素值改变的题目中，可以适当采用下标交换或者更换下标覆盖的方法。
2.在排序的数组元素删除时，可直接与前一元素比较。
*/
