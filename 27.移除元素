


int left = 0;
int right = numsSize - 1;


while(left <= right)
{
    if(nums[left] == val)
    {
        nums[left] = nums[right];
        right--;
        numsSize--;
    }
    else
    {
        left++;
    }
}


if(left == 0 && right == 0)
    return NULL;


return numsSize;   

思路：
因为不考虑变化后的元素的位置，在遍历元素时，当元素值与目标值不相等，将末尾的元素与当前元素交换位置并记录次数。

思考感悟：
1.在数组的元素值改变的题目中，可以适当采用下标交换或者更换下标覆盖的方法。
2.在排序数组中，由于不考虑位置变化，通过直接交换位置或直接下标覆盖的方法可以通过减少重复遍历、减少多次存储带来的时间和空间上的不必要消耗。
