/*
给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。
如果你最多只允许完成一笔交易（即买入和卖出一支股票），设计一个算法来计算你所能获取的最大利润。
注意你不能在买入股票前卖出股票。
*/

int maxProfit(int* prices, int pricesSize){
    int min=prices[0],max=0,count,i;
    if(pricesSize<2) return 0;
    for(i=1;i<pricesSize;i++){
        if(prices[i]<min) min=prices[i];
        else if(prices[i]-min >max) max=prices[i]-min;
    }
    return max;
}

/*
8ms 85.27%

思路：
记录在今天之前的最小买入值，记录并比较今天卖出和最大卖出值的大小关系并取舍。

思考感悟：
1、此种方法为用时较短且较简单的方法，大多数思路都是这样。
2、此题的重点是需要意识到只需要记录最小值，最大值是在比较的过程中不断取代的。
3、主要运用了动态规划的思想，但一维数组的动态规划有多种简便表达方法。
*/
